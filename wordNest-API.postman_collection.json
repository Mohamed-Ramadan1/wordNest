{
	"info": {
		"_postman_id": "3a60def7-9c6f-4e77-8817-8557c66c5de6",
		"name": "wordNest-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31297722"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "admin",
					"item": [
						{
							"name": "roles",
							"item": [
								{
									"name": "list user roles",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/admin/users/677d737c2ae01046a98cba1e/roles",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users",
												"677d737c2ae01046a98cba1e",
												"roles"
											]
										},
										"description": "### GET /admin/users/{userId}/roles\n\nThis endpoint retrieves the roles associated with a specific user.\n\n#### Request\n\nNo request body is required for this endpoint.\n\n- `userId` (path parameter) : The unique identifier of the user for whom the roles are being retrieved.\n    \n\n#### Response\n\nThe response will be in JSON format and will have the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"userEmail\": {\n                    \"type\": \"string\"\n                },\n                \"roles\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}\n\n ```"
									},
									"response": []
								},
								{
									"name": "assign role to user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"role\":\"blog-admin\"\n\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/admin/users/677d737c2ae01046a98cba1e/assign-role",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users",
												"677d737c2ae01046a98cba1e",
												"assign-role"
											]
										},
										"description": "### POST /admin/users/677d737c2ae01046a98cba1e/assign-role\n\nThis endpoint is used to assign a role to a specific user.\n\n#### Request\n\n- Method: POST\n    \n- URL: {{URL}}/admin/users/677d737c2ae01046a98cba1e/assign-role\n    \n- Body:\n    \n    - role (text, required): The role to be assigned to the user.\n        \n\n#### Response\n\nThe response for this request can be represented as a JSON schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
									},
									"response": []
								},
								{
									"name": "remove user role",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n       \"role\":\"blog-admin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/admin/users/677d737c2ae01046a98cba1e/remove-role",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users",
												"677d737c2ae01046a98cba1e",
												"remove-role"
											]
										},
										"description": "This endpoint is used to remove a specific role from a user in the admin panel. The HTTP DELETE request is sent to {{URL}}/admin/users/677d737c2ae01046a98cba1e/remove-role with the role to be removed specified in the request body.\n\n### Request Body\n\n- `role`: The role to be removed from the user.\n    \n\n### Response\n\nUpon successful execution, the endpoint returns a status code of 200 and a JSON response with the following fields:\n\n- `status`: Indicates the status of the operation.\n    \n- `message`: Provides additional information about the operation."
									},
									"response": []
								},
								{
									"name": "reset all user roles ",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{URL}}/admin/users/677d737c2ae01046a98cba1e/reset-roles",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users",
												"677d737c2ae01046a98cba1e",
												"reset-roles"
											]
										},
										"description": "The HTTP PATCH request is used to reset the roles for a specific user in the admin panel. The request is sent to the endpoint `{{URL}}/admin/users/677d737c2ae01046a98cba1e/reset-roles`.\n\n### Response\n\nThe response returned has a status code of 200 and a content type of `application/json`. The response body follows the JSON schema below:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
									},
									"response": []
								}
							]
						},
						{
							"name": "CRUD",
							"item": [
								{
									"name": "Get all users ",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/admin/users",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users"
											]
										},
										"description": "### GET /admin/users\n\nThis endpoint retrieves a list of all admin users.\n\n#### Request\n\nThere are no request parameters for this endpoint.\n\n#### Response\n\n- Status: 200 OK\n    \n- Content-Type: application/json\n    \n\n##### Response Body\n\n``` json\n{\n    \"status\": \"\",\n    \"message\": \"\",\n    \"length\": 0,\n    \"data\": {\n        \"users\": [\n            {\n                \"_id\": \"\",\n                \"firstName\": \"\",\n                \"lastName\": \"\",\n                \"bio\": \"\",\n                \"email\": \"\",\n                \"resendVerificationTokenCount\": 0,\n                \"emailVerified\": true,\n                \"isActive\": true,\n                \"deactivationRequestCount\": 0,\n                \"reactivationRequestCount\": 0,\n                \"deleteAccountRequestCount\": 0,\n                \"userAccountToBeDeleted\": true,\n                \"following\": 0,\n                \"followingIds\": [],\n                \"followers\": 0,\n                \"followerIds\": [],\n                \"profilePicture\": \"\",\n                \"profilePictureId\": \"\",\n                \"passwordResetRequestsAttempts\": 0,\n                \"roles\": [\"\"],\n                \"notificationsEnabled\": true,\n                \"emailVerificationToken\": \"\",\n                \"emailVerificationExpires\": \"\",\n                \"createdAt\": \"\",\n                \"updatedAt\": \"\",\n                \"__v\": 0,\n                \"lastVerificationEmailSentAt\": \"\",\n                \"passwordLastResetRequestAttemptDate\": \"\",\n                \"passwordResetToken\": \"\",\n                \"passwordResetTokenExpiredAt\": \"\",\n                \"passwordChangedAt\": \"\",\n                \"deactivationAccountToken\": \"\",\n                \"deactivationAccountTokenExpiredAt\": \"\",\n                \"lastDeactivationRequestAt\": \"\",\n                \"deleteAccountRequestToken\": \"\",\n                \"deleteAccountRequestTokenExpiredAt\": \"\",\n                \"lastDeleteAccountRequestAt\": \"\",\n                \"changeEmailRequestCount\": 0,\n                \"changeEmailRequestToken\": \"\",\n                \"changeEmailVerificationTokenExpiresAt\": \"\",\n                \"isChangeEmailRequestConfirmed\": true,\n                \"lastChangeEmailRequestAt\": \"\",\n                \"previousEmails\": [],\n                \"tempChangedEmail\": \"\",\n                \"tempChangedEmailVerificationTokenCount\": 0\n            }\n        ]\n    }\n}\n\n ```\n\nThis response contains an array of user objects with various attributes such as ID, name, email, account status, profile picture, roles, and other related information."
									},
									"response": []
								},
								{
									"name": "Delete user by id ",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{URL}}/admin/users/677e830269c0c10916d2dd7a",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users",
												"677e830269c0c10916d2dd7a"
											]
										},
										"description": "### Delete User\n\nThis endpoint is used to delete a specific user by their ID.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\n- Status: 204\n    \n- Content-Type: text/xml"
									},
									"response": []
								},
								{
									"name": "Update user details ",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\":\"kivan\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/admin/users/677e7fe5f5edf036614f54ae",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users",
												"677e7fe5f5edf036614f54ae"
											]
										},
										"description": "This endpoint is used to update user information by sending an HTTP PATCH request to the specified user's ID in the URL.\n\n### Request Body\n\n- The request body should be in raw format and include the following parameter:\n    \n    - `firstName` (string, required): The updated first name of the user.\n        \n    - all other feailds related to user model\n        \n\n### Response\n\nThe response will be in JSON format with the following schema:\n\n``` json\n{\n  \"status\": \"\",\n  \"message\": \"\",\n  \"data\": {\n    \"user\": {\n      \"_id\": \"\",\n      \"firstName\": \"\",\n      \"lastName\": \"\",\n      \"bio\": \"\",\n      \"email\": \"\",\n      \"resendVerificationTokenCount\": 0,\n      \"emailVerified\": true,\n      \"isActive\": true,\n      \"deactivationRequestCount\": 0,\n      \"reactivationRequestCount\": 0,\n      \"changeEmailRequestCount\": 0,\n      \"isChangeEmailRequestConfirmed\": true,\n      \"tempChangedEmailVerificationTokenCount\": 0,\n      \"deleteAccountRequestCount\": 0,\n      \"userAccountToBeDeleted\": true,\n      \"following\": 0,\n      \"followingIds\": [],\n      \"followers\": 0,\n      \"followerIds\": [],\n      \"profilePicture\": \"\",\n      \"profilePictureId\": \"\",\n      \"passwordResetRequestsAttempts\": 0,\n      \"roles\": [\"\"],\n      \"notificationsEnabled\": true,\n      \"previousEmails\": [],\n      \"createdAt\": \"\",\n      \"updatedAt\": \"\",\n      \"__v\": 0,\n      \"emailVerifiedAt\": \"\"\n    }\n  }\n}\n\n ```\n\nThe response includes the updated user object with various attributes related to the user's account."
									},
									"response": []
								},
								{
									"name": "Get user by id ",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/admin/users/677d737c2ae01046a98cba1e",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users",
												"677d737c2ae01046a98cba1e"
											]
										},
										"description": "This endpoint makes an HTTP GET request to retrieve the details of a specific user with the given ID. The response will be in JSON format and will contain various user-related data.\n\n### Request\n\n- Method: GET\n    \n- URL: {{URL}}/admin/users/677d737c2ae01046a98cba1e\n    \n\n### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n- {\n    \n- status:string,\n    \n- message:string,\n    \n- data:{\n    \n- user:{\n    \n    - user data\n        \n- }\n    \n- }"
									},
									"response": []
								},
								{
									"name": "create  user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\":\"mohamedramadanmeray@gmail.com\",\n    \"firstName\":\"123456789\",\n    \"lastName\":\"king\",\n    \"password\":\"123456789\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/admin/users",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users"
											]
										},
										"description": "### Create Admin User\n\nThis endpoint allows the admin to create a new user.\n\n#### Request Body\n\n- email (string): The email of the user.\n    \n- firstName (string): The first name of the user.\n    \n- lastName (string): The last name of the user.\n    \n- password (string): The password for the user account.\n    \n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n  \"status\": \"\",\n  \"message\": \"\",\n  \"data\": {\n    \"user\": {\n      \"firstName\": \"\",\n      \"lastName\": \"\",\n      \"bio\": \"\",\n      \"email\": \"\",\n      \"resendVerificationTokenCount\": 0,\n      \"emailVerified\": true,\n      \"isActive\": true,\n      \"deactivationRequestCount\": 0,\n      \"reactivationRequestCount\": 0,\n      \"changeEmailRequestCount\": 0,\n      \"isChangeEmailRequestConfirmed\": true,\n      \"tempChangedEmailVerificationTokenCount\": 0,\n      \"deleteAccountRequestCount\": 0,\n      \"userAccountToBeDeleted\": true,\n      \"following\": 0,\n      \"followingIds\": [],\n      \"followers\": 0,\n      \"followerIds\": [],\n      \"profilePicture\": \"\",\n      \"profilePictureId\": \"\",\n      \"password\": \"\",\n      \"passwordResetRequestsAttempts\": 0,\n      \"roles\": [\"\"],\n      \"notificationsEnabled\": true,\n      \"_id\": \"\",\n      \"previousEmails\": [],\n      \"createdAt\": \"\",\n      \"updatedAt\": \"\",\n      \"__v\": 0,\n      \"emailVerificationToken\": \"\",\n      \"emailVerificationExpires\": \"\"\n    }\n  }\n}\n\n ```"
									},
									"response": []
								}
							]
						},
						{
							"name": "lock accounts",
							"item": [
								{
									"name": "un-Lock user account",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"unLockComment\":\"a very good person\"\n}   ",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/admin/users/677d737c2ae01046a98cba1e/unlock-account",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users",
												"677d737c2ae01046a98cba1e",
												"unlock-account"
											]
										},
										"description": "### Patch Unlock Account\n\nThis endpoint is used to unlock a user account by sending a PATCH request to the specified URL.\n\n#### Request Body\n\n- unLockComment (text, required): A comment describing the reason for unlocking the account.\n    \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
									},
									"response": []
								},
								{
									"name": "lock user account",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"lockReason\":\"he fucing admin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/admin/users/677d737c2ae01046a98cba1e/lock-account",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users",
												"677d737c2ae01046a98cba1e",
												"lock-account"
											]
										},
										"description": "### PATCH /admin/users/677d737c2ae01046a98cba1e/lock-account\n\nThis endpoint is used to lock the account of a specific user.\n\n#### Request Body\n\n- `lockReason`: (string) The reason for locking the user's account.\n    \n\n#### Response\n\nThe response for this request can be documented as a JSON schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
									},
									"response": []
								}
							]
						},
						{
							"name": "band accounts",
							"item": [
								{
									"name": "ban user account",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"banAccountReason\":\"un goood user account\",\n    \"banAccountDaysNumber\":4\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/admin/users/677d737c2ae01046a98cba1e/ban-account",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users",
												"677d737c2ae01046a98cba1e",
												"ban-account"
											]
										},
										"description": "### PATCH /admin/users/677d737c2ae01046a98cba1e/ban-account\n\nThis endpoint is used to ban a user account by providing a reason and the number of days for the ban.\n\n#### Request Body\n\n- banAccountReason (string, required): The reason for banning the user account.\n    \n- banAccountDaysNumber (integer, required): The number of days for the ban.\n    \n\n#### Response\n\nThe response for this request is in JSON format and includes the following fields:\n\n- status (string): The status of the ban operation.\n    \n- message (string): Additional message related to the ban operation.\n    \n\n#### JSON Schema\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\"type\": \"string\"},\n    \"message\": {\"type\": \"string\"}\n  }\n}\n\n ```"
									},
									"response": []
								},
								{
									"name": "un-ban  user account",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"adminUnbanComment\":\"success completee the mes\"\n\n    \n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/admin/users/677d737c2ae01046a98cba1e/unban-account",
											"host": [
												"{{URL}}"
											],
											"path": [
												"admin",
												"users",
												"677d737c2ae01046a98cba1e",
												"unban-account"
											]
										},
										"description": "The HTTP PATCH request is used to unban a user account in the admin panel. The request is sent to {{URL}}/admin/users/677d737c2ae01046a98cba1e/unban-account with a payload in raw request body type. The payload includes the field \"adminUnbanComment\" with a value indicating the admin's comment on the unban action.\n\n### Response\n\nThe response to this request is in JSON format and includes the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "user",
					"item": [
						{
							"name": "update profile picture ",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "profilePicture",
											"type": "file",
											"src": "/home/mohamed/Pictures/Screenshots/Screenshot from 2025-01-07 21-36-07.png"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/users/profile/picture",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"profile",
										"picture"
									]
								},
								"description": "### Update User Profile Picture\n\nThis endpoint is used to update the profile picture of a user.\n\n#### Request Body\n\n- form-data\n    - profilePicture (file): The new profile picture to be uploaded.\n\n#### Response\n\nThe response will be in JSON format with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\"type\": \"string\"},\n    \"message\": {\"type\": \"string\"},\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"_id\": {\"type\": \"string\"},\n            \"firstName\": {\"type\": \"string\"},\n            \"lastName\": {\"type\": \"string\"},\n            \"email\": {\"type\": \"string\"},\n            \"resendVerificationTokenCount\": {\"type\": \"integer\"},\n            \"emailVerified\": {\"type\": \"boolean\"},\n            \"isActive\": {\"type\": \"boolean\"},\n            \"following\": {\"type\": \"integer\"},\n            \"followingIds\": {\"type\": \"array\"},\n            \"followers\": {\"type\": \"integer\"},\n            \"followerIds\": {\"type\": \"array\"},\n            \"bio\": {\"type\": \"string\"},\n            \"profilePicture\": {\"type\": \"string\"},\n            \"passwordResetRequestsAttempts\": {\"type\": \"integer\"},\n            \"roles\": {\"type\": \"array\"},\n            \"notificationsEnabled\": {\"type\": \"boolean\"},\n            \"emailVerificationToken\": {\"type\": \"string\"},\n            \"emailVerificationExpires\": {\"type\": \"string\"},\n            \"createdAt\": {\"type\": \"string\"},\n            \"updatedAt\": {\"type\": \"string\"},\n            \"__v\": {\"type\": \"integer\"},\n            \"lastVerificationEmailSentAt\": {\"type\": \"string\"},\n            \"passwordChangedAt\": {\"type\": \"string\"},\n            \"profilePictureId\": {\"type\": \"string\"}\n          }\n        }\n      }\n    }\n  }\n}\n\n ```"
							},
							"response": []
						},
						{
							"name": "get current user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/users/profile",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"profile"
									]
								},
								"description": "### Get User Profile\n\nThis endpoint retrieves the profile data of the authenticated user.\n\n#### Request\n\n- Method: GET\n- URL: {{URL}}/users/profile\n    \n\n#### Response\n\n- Status: 200 OK\n- Content-Type: application/json\n    \n\n``` json\n{\n  \"status\": \"\",\n  \"message\": \"\",\n  \"data\": {\n    \"userData\": {\n      \"_id\": \"\",\n      \"firstName\": \"\",\n      \"lastName\": \"\",\n      \"email\": \"\",\n      \"resendVerificationTokenCount\": 0,\n      \"emailVerified\": true,\n      \"isActive\": true,\n      \"following\": 0,\n      \"followingIds\": [],\n      \"followers\": 0,\n      \"followerIds\": [],\n      \"bio\": \"\",\n      \"profilePicture\": \"\",\n      \"passwordResetRequestsAttempts\": 0,\n      \"roles\": [\"\"],\n      \"notificationsEnabled\": true,\n      \"emailVerificationToken\": \"\",\n      \"emailVerificationExpires\": \"\",\n      \"createdAt\": \"\",\n      \"updatedAt\": \"\",\n      \"__v\": 0,\n      \"lastVerificationEmailSentAt\": \"\",\n      \"passwordChangedAt\": \"\",\n      \"profilePictureId\": \"\"\n    }\n  }\n}\n\n ```"
							},
							"response": []
						},
						{
							"name": "update account information",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\":\"Mohamed\",\n    \"lastName\":\"Ramadan\",\n    \"bio\":\"A talent software enginner that hope one day will be one of the powerfull enginners.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/users/profile/information",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"profile",
										"information"
									]
								},
								"description": "### HTTP PATCH /users/profile/information\n\nThis endpoint is used to update the profile information of a user.\n\n#### Request Body\n\n- firstName (string, optional): The updated first name of the user.\n    \n- lastName (string, optional): The updated last name of the user.\n    \n- bio (string, optional): The updated biography of the user.\n    \n\n#### Response\n\nThe response of this request is documented as a JSON schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"_id\": {\n                            \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                            \"type\": \"string\"\n                        },\n                        \"lastName\": {\n                            \"type\": \"string\"\n                        },\n                        \"email\": {\n                            \"type\": \"string\"\n                        },\n                        \"resendVerificationTokenCount\": {\n                            \"type\": \"integer\"\n                        },\n                        \"emailVerified\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"isActive\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"following\": {\n                            \"type\": \"integer\"\n                        },\n                        \"followingIds\": {\n                            \"type\": \"array\"\n                        },\n                        \"followers\": {\n                            \"type\": \"integer\"\n                        },\n                        \"followerIds\": {\n                            \"type\": \"array\"\n                        },\n                        \"bio\": {\n                            \"type\": \"string\"\n                        },\n                        \"profilePicture\": {\n                            \"type\": \"string\"\n                        },\n                        \"passwordResetRequestsAttempts\": {\n                            \"type\": \"integer\"\n                        },\n                        \"roles\": {\n                            \"type\": \"array\"\n                        },\n                        \"notificationsEnabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"emailVerificationToken\": {\n                            \"type\": \"string\"\n                        },\n                        \"emailVerificationExpires\": {\n                            \"type\": \"string\"\n                        },\n                        \"createdAt\": {\n                            \"type\": \"string\"\n                        },\n                        \"updatedAt\": {\n                            \"type\": \"string\"\n                        },\n                        \"__v\": {\n                            \"type\": \"integer\"\n                        },\n                        \"lastVerificationEmailSentAt\": {\n                            \"type\": \"string\"\n                        },\n                        \"passwordChangedAt\": {\n                            \"type\": \"string\"\n                        },\n                        \"profilePictureId\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n ```"
							},
							"response": []
						},
						{
							"name": "change account password",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"currentPassword\":\"123456789\",\n    \"newPassword\":\"Aa!123456\",\n    \"newPasswordConfirmation\":\"Aa!123456\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/users/account/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"password"
									]
								},
								"description": "### Update User Password\n\nThis endpoint is used to update the password for a user account.\n\n#### Request Body\n\n- `currentPassword` (string) - The current password of the user.\n- `newPassword` (string) - The new password for the user account.\n- `newPasswordConfirmation` (string) - Confirmation of the new password.\n    \n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
							},
							"response": []
						},
						{
							"name": "Enable account notification",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{URL}}/users/account/notifications/enable",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"notifications",
										"enable"
									]
								},
								"description": "The `PATCH /users/account/notifications/enable` endpoint is used to update the notification settings for a user's account.\n\n### Response\n\nThe response for this request is a JSON object with the following schema:\n\n- `status` (string): Represents the status of the notification update.\n- `message` (string): Provides additional information or a message related to the notification update.\n    \n\nExample:\n\n``` json\n{\n    \"status\": \"\",\n    \"message\": \"\"\n}\n\n ```"
							},
							"response": []
						},
						{
							"name": "disable account notifications",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/users/account/notifications/disable",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"notifications",
										"disable"
									]
								},
								"description": "\n### Update User Notification Preferences\n\nThis endpoint is used to disable notifications for a user's account.\n\n**Request Body**\n- No request body is required for this endpoint.\n\n**Response**\n- Status: 200 OK\n- Content Type: application/json\n- Body:\n  ```json\n  {\n      \"status\": \"\",\n      \"message\": \"\"\n  }\n  ```\n"
							},
							"response": []
						},
						{
							"name": "deactivate user account request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/users/account/deactivate-request",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"deactivate-request"
									]
								},
								"description": "### Deactivate User Account\n\nThis endpoint is used to deactivate a user account request\n\nthe user will recive an email with link when he click this link he will confirm the deactiation process.\n\n- **Response**\n    \n\n- `status` (string): The status of the deactivation process.\n- `message` (string): Additional information about the deactivation process."
							},
							"response": []
						},
						{
							"name": "confirm account deactivation",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/users/account/deactivate-confirm/ce9083d39124bdb15c705080f80afddaeda8892625571a854cf73657e0cfb807",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"deactivate-confirm",
										"ce9083d39124bdb15c705080f80afddaeda8892625571a854cf73657e0cfb807"
									]
								}
							},
							"response": []
						},
						{
							"name": "activate user account",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/users/account/activate/eb1f7c8a2ba7bda48eae4e1a2f03d56d54a24f9061e62b738ba9d1c2eae6172c",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"activate",
										"eb1f7c8a2ba7bda48eae4e1a2f03d56d54a24f9061e62b738ba9d1c2eae6172c"
									]
								},
								"description": "### Activate User Account\n\nThis endpoint triggers the activation of a user account using the provided activation code.\n\n#### Request Body\n\n- No request body parameters required.\n    \n\n#### Response\n\nThe response is in JSON format and follows the schema below:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
							},
							"response": []
						},
						{
							"name": "delete account request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/users/account/deletion-request",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"deletion-request"
									]
								},
								"description": "### Create Account Deletion Request\n\nThis endpoint allows the user to send a request to delete their account.\n\n#### Request Body Parameters\n\n#### Response\n\n- `status` (string): The status of the account deletion request.\n- `message` (string): Additional information or message related to the account deletion request."
							},
							"response": []
						},
						{
							"name": "confirm account deletion ",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}/users/account/confirm-deletion/54a2fa45e4730ba057249d06e00be6cb6775102549fae5ff1c2798be9ddd4b22",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"confirm-deletion",
										"54a2fa45e4730ba057249d06e00be6cb6775102549fae5ff1c2798be9ddd4b22"
									]
								},
								"description": "This endpoint sends an HTTP DELETE request to confirm the deletion of a user account with a specific confirmation code.\n\n### Request Body\n\nThis request does not require a request body.\n\n### Response\n\nUpon successful execution, the server responds with a status code of 200 and a JSON object in the response body. The JSON object contains the following fields:\n\n- `status`: (string) Indicates the status of the deletion confirmation.\n- `message`: (string) Provides additional information regarding the deletion confirmation process."
							},
							"response": []
						},
						{
							"name": "change account email request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newEmail\":\"mohamedramadanmeray@gmail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/users/account/email/change-request",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"email",
										"change-request"
									]
								},
								"description": "### Change User Email Request\n\nThis endpoint is used to initiate a request to change the user's email.\n\n#### Request Body\n\n- `newEmail`: (string) The new email address for the user's account.\n    \n\n#### Response\n\n- `status`: (string) The status of the request.\n- `message`: (string) Additional message related to the status."
							},
							"response": []
						},
						{
							"name": "confirm account email change",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{URL}}/users/account/email/confirm-change/55371dfff00c12a5fe0c7c6558d64f236251d324226b0b43d1cfbf5e8d5aa6a1",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"email",
										"confirm-change",
										"55371dfff00c12a5fe0c7c6558d64f236251d324226b0b43d1cfbf5e8d5aa6a1"
									]
								},
								"description": "### PATCH /users/account/email/confirm-change/{id}\n\nThis endpoint is used to confirm the change of email for a user account.\n\n#### Request Body\n\n- No request body is required for this endpoint.\n    \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```\n\nThe response contains the status and a message, both of which are strings."
							},
							"response": []
						},
						{
							"name": "verify new changed email address",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{URL}}/users/account/email/verify-new-email/4d0c820a0f6a69f9e5c36e62a278369b52ffb67d9fe3d4be2964c8581ae3ab1e",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"email",
										"verify-new-email",
										"4d0c820a0f6a69f9e5c36e62a278369b52ffb67d9fe3d4be2964c8581ae3ab1e"
									]
								},
								"description": "\nThis endpoint sends an HTTP PATCH request to verify a new email for a user's account. The request body should include the new email verification token in the URL. The response will have a status code of 200 and a JSON body with a status and message field.\n\n### Request Body\n- No request body parameters are required for this endpoint.\n\n### Response\n- `status` (string): Indicates the status of the email verification process.\n- `message` (string): Provides additional information about the verification status.\n\n"
							},
							"response": []
						},
						{
							"name": "resend new account verification token",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/users/account/email/resend-new-email-token",
									"host": [
										"{{URL}}"
									],
									"path": [
										"users",
										"account",
										"email",
										"resend-new-email-token"
									]
								},
								"description": "### Request Description\n\nThis endpoint is used to resend a new email verification token for the user's account. The request should be sent as an HTTP POST to the specified URL with the necessary parameters in the request body.\n\n### Request Body\n\n- No specific request body parameters were provided.\n    \n\n### Response\n\nThe response to this request will be in JSON format with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```\n\nThe response will include the status and a message indicating the result of the request."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"mohamedramadan11b@gmail.com\",\n    \"firstName\":\"Mohamed \",\n    \"lastName\":\"Ramadan\",\n    \"password\":\"123456789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"mohamedramadan11b@gmail.com\",\n    \"password\":\"Aa!123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "### Auth Login\n\nThis endpoint is used to authenticate and log in a user.\n\n#### Request Body\n\n- email (text, required): The email address of the user.\n- password (text, required): The password of the user.\n    \n\n#### Response\n\nThe response of this request can be documented as a JSON schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"token\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);",
									"pm.variables.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "### Auth Logout\n\nThis endpoint is used to log out the user and invalidate the authentication token.\n\n#### Request Body\n\n- No request body is required for this endpoint.\n    \n\n#### Response Body\n\nThe response is in JSON format and includes the following fields:\n\n- `status` (string): Indicates the status of the logout operation.\n- `message` (string): Provides additional information about the logout status.\n- `token` (string): Represents the invalidated authentication token.\n    \n\n#### JSON Schema\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        },\n        \"token\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Resend verification email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{URL}}/auth/verify-email/resend",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"verify-email",
								"resend"
							]
						},
						"description": "### Auth Verify Email Resend\n\nThis endpoint is used to resend the verification email for the user.\n\n#### Request\n\n- Method: POST\n- URL: {{URL}}/auth/verify-email/resend\n- Body: form-data\n    \n\n#### Request Body Parameters\n\n- No request body parameters were provided for this request.\n    \n\n#### Response\n\nThe response for this request is in JSON format and includes the following fields:\n\n- `status` (string): Indicates the status of the request.\n- `message` (string): Provides additional information or a message related to the request.\n    \n\n#### Response JSON Schema\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Verify email",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/auth/verify-email/token",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"verify-email",
								"token"
							]
						},
						"description": "## Verify Email\n\nThis endpoint is used to verify the user's email using the provided token.\n\n### Request Body\n\n- token (string, required): The verification token sent to the user's email.\n    \n\n### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n  \"status\": \"string\",\n  \"message\": \"string\"\n}\n\n ```\n\n- status (string): The status of the verification process.\n- message (string): A message indicating the result of the verification process."
					},
					"response": []
				},
				{
					"name": "Forgot password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"mohamedramadan11b@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/password/forgot",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"password",
								"forgot"
							]
						},
						"description": "\n# Forgot Password\n\nThis endpoint is used to initiate the process of resetting a user's password by sending a reset link to the provided email address.\n\n## Request\n\n- Method: POST\n- URL: {{URL}}/auth/password/forgot\n- Body:\n  - email (string, required): The email address of the user requesting the password reset.\n\n## Response\n\nThe response for this request follows the JSON schema below:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nThe response object contains the following properties:\n- success (boolean): Indicates whether the password reset request was successful.\n- message (string): A message providing information about the password reset process.\n\n"
					},
					"response": []
				},
				{
					"name": "Reset password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"newPassword\":\"Aa1234567@!\",\n    \"confirmNewPassword\":\"Aa1234567@!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/password/reset/edbe69e331a5508235e942dd06183d2590613f59f58245af90e967f15745312f",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"password",
								"reset",
								"edbe69e331a5508235e942dd06183d2590613f59f58245af90e967f15745312f"
							]
						},
						"description": "### Reset Password\n\nThis endpoint is used to reset the password by providing a new password and confirming the new password.\n\n#### Request Body\n\n- `newPassword` (string, required): The new password for the user account.\n- `confirmNewPassword` (string, required): The confirmation of the new password.\n    \n\n#### Response\n\n- `status` (string): The status of the password reset operation.\n- `message` (string): A message related to the password reset operation.\n    \n\nExample:\n\n``` json\n{\n    \"status\": \"\",\n    \"message\": \"\"\n}\n\n ```"
					},
					"response": []
				}
			],
			"description": "**Auth Collection Description:**\n\nThis collection contains all the API endpoints related to user authentication and authorization. It includes routes for user registration, login, password reset, email verification, and token management. The authentication processes are built to ensure secure access to protected resources within the application.\n\nEndpoints:\n\n- **Registration**: Allows new users to create an account.\n    \n- **Login**: Allows users to authenticate and receive a JWT token.\n    \n- **Password Reset**: Handles user requests to reset their passwords.\n    \n- **Email Verification**: Verifies the email address after registration.\n    \n- **Token Refresh**: Allows users to refresh their JWT tokens.\n    \n\nEnsure you have the necessary environment variables and request bodies configured before testing these endpoints."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}